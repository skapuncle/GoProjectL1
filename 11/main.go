package main

import (
	"fmt"
	"sort"
)

// Функция intersection принимает два среза int, которые представляют два множества.
// Она возвращает срез int, который представляет пересечение двух множеств.
func intersection(set1, set2 []int) []int {
	// Сортируем оба множества.
	sort.Ints(set1)
	sort.Ints(set2)

	// Создаем срез для хранения результата.
	var result []int

	// Создаем индексы для обхода множеств.
	var i, j int

	// Проходим по множествам одновременно.
	for i < len(set1) && j < len(set2) {
		// Если текущий элемент первого множества равен текущему элементу второго множества,
		// добавляем его в результат и переходим к следующим элементам обоих множеств.
		if set1[i] == set2[j] {
			result = append(result, set1[i])
			i++
			j++
		} else if set1[i] > set2[j] {
			// Если текущий элемент первого множества больше текущего элемента второго множества,
			// переходим к следующему элементу второго множества.
			j++
		} else {
			// В противном случае переходим к следующему элементу первого множества.
			i++
		}
	}
	// Возвращаем результат.
	return result
}

func main() {
	// Создаем два множества.
	set1 := []int{2, 8, 7, 1, 3}
	set2 := []int{3, 2, 7, 4, 5, 9}

	// Находим пересечение множеств.
	intersected := intersection(set1, set2)
	// Выводим результат.
	fmt.Println(intersected)
}
