package main

import "fmt"

// stage1 - функция принимает массив чисел и канал для отправки чисел.
// Она проходит по каждому числу в массиве и отправляет его в канал.
// Затем она закрывает канал, чтобы сигнализировать о завершении работы.
func stage1(numbers []int, in chan<- int) {
	for _, num := range numbers {
		in <- num
	}
	close(in)
}

// stage2 - функция принимает канал для получения чисел и канал для отправки результатов.
// Она проходит по каждому числу, полученному из канала, умножает его на 2 и отправляет результат во второй канал.
// Затем она закрывает второй канал, чтобы сигнализировать о завершении работы.
func stage2(in <-chan int, out chan<- int) {
	for num := range in {
		out <- num * 2
	}
	close(out)
}

// stage3 - функция принимает канал для получения результатов.
// Она проходит по каждому числу, полученному из канала, и выводит его в stdout.
func stage3(out <-chan int) {
	for num := range out {
		fmt.Println(num)
	}
}

func main() {
	// Создаем массив чисел и два канала.
	numbers := []int{1, 2, 3, 4, 5, 6, 7, 8, 9}
	in := make(chan int)
	out := make(chan int)

	// Запускаем stage1 в новой горутине.
	go stage1(numbers, in)
	// Запускаем stage2 в новой горутине.
	go stage2(in, out)
	// Вызываем stage3.
	stage3(out)
}
